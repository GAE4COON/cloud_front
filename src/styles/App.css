.App {
  text-align: center;
}

.main-content {
  display: flex;
  flex-direction: column;
  min-height: 90vh;
  padding-left:10%;
  padding-right:10%;
}

@media (max-width: 768px) {
  .main-content {
    padding-left:0;
    padding-right:0;
  }
}

.createspace {
  display: flex;
  justify-content: space-between;
}

.App-logo {
  height: 40vmin;
  pointer-events: none;
}

@media (prefers-reduced-motion: no-preference) {
  .App-logo {
    animation: App-logo-spin infinite 20s linear;
  }
}



.App-header {
  background-color: #282c34;
  min-height: 100vh;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  font-size: calc(10px + 2vmin);
  color: white;
}

.App-link {
  color: #61dafb;
}

@keyframes App-logo-spin {
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(360deg);
  }
}

.diagram-component {
  position: relative;
  z-index: 1; /* 낮은 z-index */
  width: 1200px;
  height: 600px;
  border: solid 1px black;
  background-color: white;
  position: absolute;
  top: 0%;
  left: 20%;
  background-size:20px 20px;

   /* create a grid pattern using linear gradients */
   background-image:
     linear-gradient(to right, rgb(231, 231, 231) .5px, transparent .5px),
     linear-gradient(to bottom, rgb(231, 231, 231)  .5px, transparent .5px);
}


.Toggletype{
  position: absolute;
  top: 4.5rem;
  right: 1.5rem;
  width: 80px;
  padding: 15px;
  border-radius: 15px;
  background-color: white;
  border: 1px solid gray;
}

.Toggletype::before{
  content:'';
  position: absolute;
  top: -0.7rem;
  right: 1.1rem;
  width: 20px;
  height: 20px;
  transform: rotate(45deg);
  background-color: white;
  border-left: 1px solid gray;
  border-top: 1px solid gray;
}

.toggle-component {
  position: absolute;
  width : 70%;
  top: 0;
  left: 25%;
  z-index: 10; /* 높은 z-index */
  margin : 0 auto;
}

.button-container {
  opacity: 1;
  margin-top: 1px;
  display: flex;
  justify-content: center;  /* 혹은 space-around, center 등 */
  align-items: center;
  flex-direction: column;
}

.button-container input{                  /*file upload 제외하고 나머지 버튼들*/
  background-color: rgb(154, 183, 193); /* 버튼 배경색을 남색으로 설정 */
  color: white; /* 글씨 색상을 흰색으로 설정 */
  border: none; /* 기본 border 제거 */
  padding: 10px 15px; /* 버튼 내부 패딩 설정. 필요에 따라 조절하세요 */
  text-align: center;
  text-decoration: none;
  display: inline-block;
  font-size: 12px;
  
   /* 모서리를 둥글게 만듭니다. 값은 필요에 따라 조절하세요 */
   border-radius:12px;
   cursor:pointer; /* 마우스 커서가 버튼 위로 올라갔을 때 손가락 모양으로 바꿉니다 */
   transition-duration :0.4s ;/* 클릭했을 때와 클릭하지 않았을 때의 전환 시간이 부드럽게 보이도록 합니다.*/
}

.button-container input:hover {
  background-color : #008CBA ;/* 배경색 변경*/
  color : white ;
}

.button-container input[type="file"] {    /*file 업로드 버튼*/
  opacity: 1;
  margin: 0 5px;
  padding: 6px 10px;
  font-size: 12px;
  cursor: pointer;
}

.button {
  opacity: 1;
  font-size: 20px;
  padding: 15px 30px;
  cursor: pointer;
}

.button-row {
  margin-bottom: 10px; /* Adjust as needed */
}

/*장어진 workspace를 100씩으로 주게된건 workspace의 크기는 diagram의 영향을 받기때문에 diagram을 수정하는 크기만큼 표시하기 위함*/
.workspace{
  display: flex;
  flex-direction: column;
  align-items: stretch;  
  
  position : relative;
  width: 100%; /* Optional: 부모 요소의 너비를 100%로 설정 */
  height: 100vh; /*  Optional: 뷰포트 높이를 기준으로 높이 설정 */
}

.select-toggle-container,
.react-diagram-container {
  width: 100%;  /* 부모 컨테이너의 가로 길이에 맞춤 */
}

.react-diagram-container {
  flex-grow: 1;  /* 가능한 경우 남은 공간을 채움 */
}



.palette-component{
  position: absolute;
  float : left;
  width : 20%;
  height : 80%;
  border: "solid 1px black";
}

.palette-component-small{
  position: absolute;
  float : left;
  width : 20%;
  height : 80%;
  border: "solid 1px black";
}

.diagram-component{
  position: relative;
  float : left;

  width : 70%;
  height : 80%;
  border: solid 1px black;
  background-color: white;
  top: 0%;
  left: 25%;
  background-size:20px 20px;

   /* create a grid pattern using linear gradients */
   background-image:
     linear-gradient(to right, rgb(231, 231, 231) .5px, transparent .5px),
     linear-gradient(to bottom, rgb(231, 231, 231)  .5px, transparent .5px);

}

.diagram-component-small{
  position: relative;
  float : left;
  width : 70%;
  height : 80%;
  border: solid 1px black;
  background-color: white;
  top: 0%;
  left: 20%;
  background-size:20px 20px;
  
   /* create a grid pattern using linear gradients */
   background-image:
     linear-gradient(to right, rgb(231, 231, 231) .5px, transparent .5px),
     linear-gradient(to bottom, rgb(231, 231, 231)  .5px, transparent .5px);


}

.side-menu {
  width: 200px;
  height: 100vh;
  background-color: #333;
  color: white;
  position: absolute;
  top: 0;
  left: 0;
  transform: translateX(-100%);
  transition: transform 0.3s ease-in-out;
}

.side-menu.open {
  transform: translateX(0);
}

.side-menu.closed {
  transform: translateX(-100%);
}
